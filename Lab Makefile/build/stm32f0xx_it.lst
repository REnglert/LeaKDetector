ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB40:
  26              		.file 1 "Src/stm32f0xx_it.c"
   1:Src/stm32f0xx_it.c **** /* USER CODE BEGIN
   2:Src/stm32f0xx_it.c ****   ******************************************************************************
   3:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   4:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f0xx_it.c ****   ******************************************************************************
   6:Src/stm32f0xx_it.c ****   * @attention
   7:Src/stm32f0xx_it.c ****   *
   8:Src/stm32f0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
   9:Src/stm32f0xx_it.c ****   * All rights reserved.</center></h2>
  10:Src/stm32f0xx_it.c ****   *
  11:Src/stm32f0xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  12:Src/stm32f0xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  13:Src/stm32f0xx_it.c ****   * License. You may obtain a copy of the License at:
  14:Src/stm32f0xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  15:Src/stm32f0xx_it.c ****   *
  16:Src/stm32f0xx_it.c ****   ******************************************************************************
  17:Src/stm32f0xx_it.c ****   */
  18:Src/stm32f0xx_it.c **** /* USER CODE END Header */
  19:Src/stm32f0xx_it.c **** 
  20:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32f0xx_it.c **** #include "main.h"
  22:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  23:Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32f0xx_it.c **** 
  27:Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32f0xx_it.c **** 
  30:Src/stm32f0xx_it.c **** /* USER CODE END TD */
  31:Src/stm32f0xx_it.c **** 
  32:Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s 			page 2


  33:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32f0xx_it.c ****  
  35:Src/stm32f0xx_it.c **** /* USER CODE END PD */
  36:Src/stm32f0xx_it.c **** 
  37:Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32f0xx_it.c **** 
  40:Src/stm32f0xx_it.c **** /* USER CODE END PM */
  41:Src/stm32f0xx_it.c **** 
  42:Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32f0xx_it.c **** 
  45:Src/stm32f0xx_it.c **** /* USER CODE END PV */
  46:Src/stm32f0xx_it.c **** 
  47:Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32f0xx_it.c **** 
  50:Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32f0xx_it.c **** 
  52:Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32f0xx_it.c **** 
  55:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32f0xx_it.c **** 
  57:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32f0xx_it.c **** 
  59:Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  60:Src/stm32f0xx_it.c **** 
  61:Src/stm32f0xx_it.c **** /* USER CODE END EV */
  62:Src/stm32f0xx_it.c **** 
  63:Src/stm32f0xx_it.c **** /******************************************************************************/
  64:Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */ 
  65:Src/stm32f0xx_it.c **** /******************************************************************************/
  66:Src/stm32f0xx_it.c **** /**
  67:Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  68:Src/stm32f0xx_it.c ****   */
  69:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  70:Src/stm32f0xx_it.c **** {
  27              		.loc 1 70 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  71:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  72:Src/stm32f0xx_it.c **** 
  73:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  74:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  75:Src/stm32f0xx_it.c **** 
  76:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  77:Src/stm32f0xx_it.c **** }
  32              		.loc 1 77 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE40:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s 			page 3


  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  44              		.fpu softvfp
  46              	HardFault_Handler:
  47              	.LFB41:
  78:Src/stm32f0xx_it.c **** 
  79:Src/stm32f0xx_it.c **** /**
  80:Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  81:Src/stm32f0xx_it.c ****   */
  82:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  83:Src/stm32f0xx_it.c **** {
  48              		.loc 1 83 1 view -0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  84:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  85:Src/stm32f0xx_it.c **** 
  86:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  87:Src/stm32f0xx_it.c ****   while (1)
  55              		.loc 1 87 3 discriminator 1 view .LVU3
  88:Src/stm32f0xx_it.c ****   {
  89:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  90:Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  91:Src/stm32f0xx_it.c ****   }
  56              		.loc 1 91 3 discriminator 1 view .LVU4
  87:Src/stm32f0xx_it.c ****   {
  57              		.loc 1 87 9 discriminator 1 view .LVU5
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE41:
  62              		.section	.text.SVC_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	SVC_Handler
  65              		.syntax unified
  66              		.code	16
  67              		.thumb_func
  68              		.fpu softvfp
  70              	SVC_Handler:
  71              	.LFB42:
  92:Src/stm32f0xx_it.c **** }
  93:Src/stm32f0xx_it.c **** 
  94:Src/stm32f0xx_it.c **** /**
  95:Src/stm32f0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
  96:Src/stm32f0xx_it.c ****   */
  97:Src/stm32f0xx_it.c **** void SVC_Handler(void)
  98:Src/stm32f0xx_it.c **** {
  72              		.loc 1 98 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  99:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s 			page 4


 100:Src/stm32f0xx_it.c **** 
 101:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 102:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 103:Src/stm32f0xx_it.c **** 
 104:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 105:Src/stm32f0xx_it.c **** }
  77              		.loc 1 105 1 view .LVU7
  78              		@ sp needed
  79 0000 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE42:
  83              		.section	.text.PendSV_Handler,"ax",%progbits
  84              		.align	1
  85              		.global	PendSV_Handler
  86              		.syntax unified
  87              		.code	16
  88              		.thumb_func
  89              		.fpu softvfp
  91              	PendSV_Handler:
  92              	.LFB43:
 106:Src/stm32f0xx_it.c **** 
 107:Src/stm32f0xx_it.c **** /**
 108:Src/stm32f0xx_it.c ****   * @brief This function handles Pendable request for system service.
 109:Src/stm32f0xx_it.c ****   */
 110:Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 111:Src/stm32f0xx_it.c **** {
  93              		.loc 1 111 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 112:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 113:Src/stm32f0xx_it.c **** 
 114:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 115:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 116:Src/stm32f0xx_it.c **** 
 117:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 118:Src/stm32f0xx_it.c **** }
  98              		.loc 1 118 1 view .LVU9
  99              		@ sp needed
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE43:
 104              		.section	.text.SysTick_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 110              		.fpu softvfp
 112              	SysTick_Handler:
 113              	.LFB44:
 119:Src/stm32f0xx_it.c **** 
 120:Src/stm32f0xx_it.c **** /**
 121:Src/stm32f0xx_it.c ****   * @brief This function handles System tick timer.
 122:Src/stm32f0xx_it.c ****   */
 123:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s 			page 5


 124:Src/stm32f0xx_it.c **** {
 114              		.loc 1 124 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 10B5     		push	{r4, lr}
 119              	.LCFI0:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 4, -8
 122              		.cfi_offset 14, -4
 125:Src/stm32f0xx_it.c **** 
 126:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN SysTick_IRQn 0 */
 127:Src/stm32f0xx_it.c **** 
 128:Src/stm32f0xx_it.c ****     /* USER CODE END SysTick_IRQn 0 */
 129:Src/stm32f0xx_it.c ****     HAL_IncTick();
 123              		.loc 1 129 5 view .LVU11
 124 0002 FFF7FEFF 		bl	HAL_IncTick
 125              	.LVL0:
 130:Src/stm32f0xx_it.c **** //    HAL_SYSTICK_IRQHandler();
 131:Src/stm32f0xx_it.c ****     
 132:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN SysTick_IRQn 1 */
 133:Src/stm32f0xx_it.c **** //    volatile static uint32_t ticks = 0;
 134:Src/stm32f0xx_it.c **** //
 135:Src/stm32f0xx_it.c **** //    ticks++;
 136:Src/stm32f0xx_it.c **** //    if(ticks == 200){
 137:Src/stm32f0xx_it.c **** //        ticks = 0;
 138:Src/stm32f0xx_it.c **** //        GPIOC->ODR ^= (1 << 7);
 139:Src/stm32f0xx_it.c **** //    }
 140:Src/stm32f0xx_it.c **** 
 141:Src/stm32f0xx_it.c **** 
 142:Src/stm32f0xx_it.c **** 
 143:Src/stm32f0xx_it.c **** 
 144:Src/stm32f0xx_it.c ****     /* USER CODE END SysTick_IRQn 1 */
 145:Src/stm32f0xx_it.c **** }
 126              		.loc 1 145 1 is_stmt 0 view .LVU12
 127              		@ sp needed
 128 0006 10BD     		pop	{r4, pc}
 129              		.cfi_endproc
 130              	.LFE44:
 132              		.text
 133              	.Letext0:
 134              		.file 2 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_it.c
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s:16     .text.NMI_Handler:0000000000000000 $t
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s:39     .text.HardFault_Handler:0000000000000000 $t
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s:46     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s:63     .text.SVC_Handler:0000000000000000 $t
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s:70     .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s:84     .text.PendSV_Handler:0000000000000000 $t
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s:91     .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s:105    .text.SysTick_Handler:0000000000000000 $t
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccU2m7zZ.s:112    .text.SysTick_Handler:0000000000000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
