ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.initPins,"ax",%progbits
  16              		.align	1
  17              		.global	initPins
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	initPins:
  25              	.LFB40:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   * Bruce Englert
   4:Src/main.c    ****   * u1010546
   5:Src/main.c    ****   *
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * File Name          : main.c
   8:Src/main.c    ****   * Description        : Main program body
   9:Src/main.c    ****   ******************************************************************************
  10:Src/main.c    ****   */
  11:Src/main.c    **** 
  12:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  13:Src/main.c    **** #include "main.h"
  14:Src/main.c    **** #include "stm32f0xx_hal.h"
  15:Src/main.c    **** void _Error_Handler(char * file, int line);
  16:Src/main.c    **** 
  17:Src/main.c    **** /* USER CODE BEGIN Includes */
  18:Src/main.c    **** 
  19:Src/main.c    **** /* USER CODE END Includes */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  22:Src/main.c    **** 
  23:Src/main.c    **** /* USER CODE BEGIN PV */
  24:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  25:Src/main.c    **** 
  26:Src/main.c    **** /* USER CODE END PV */
  27:Src/main.c    **** 
  28:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  29:Src/main.c    **** void SystemClock_Config(void);
  30:Src/main.c    **** 
  31:Src/main.c    **** /* USER CODE BEGIN PFP */
  32:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* USER CODE END PFP */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE BEGIN 0 */
  37:Src/main.c    **** int initPins(void){
  27              		.loc 1 37 19 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  38:Src/main.c    **** //    RCC -> AHBENR |= RCC_AHBENR_GPIOAEN; //Enable CLK for port A
  39:Src/main.c    **** 
  40:Src/main.c    ****     //PC6 RED
  41:Src/main.c    ****     GPIOC->MODER |= 1 << 12; //set bit 12
  32              		.loc 1 41 5 view .LVU1
  33              		.loc 1 41 18 is_stmt 0 view .LVU2
  34 0000 0B4B     		ldr	r3, .L2
  35 0002 1968     		ldr	r1, [r3]
  36 0004 8022     		movs	r2, #128
  37 0006 5201     		lsls	r2, r2, #5
  38 0008 0A43     		orrs	r2, r1
  39 000a 1A60     		str	r2, [r3]
  42:Src/main.c    **** 
  43:Src/main.c    ****     //PC7 BLUE
  44:Src/main.c    ****     GPIOC->MODER |= 1 << 14; //set bit 14
  40              		.loc 1 44 5 is_stmt 1 view .LVU3
  41              		.loc 1 44 18 is_stmt 0 view .LVU4
  42 000c 1968     		ldr	r1, [r3]
  43 000e 8022     		movs	r2, #128
  44 0010 D201     		lsls	r2, r2, #7
  45 0012 0A43     		orrs	r2, r1
  46 0014 1A60     		str	r2, [r3]
  45:Src/main.c    **** 
  46:Src/main.c    ****     //PC8 ORANGE
  47:Src/main.c    ****     GPIOC->MODER |= 1 << 16; //set bit 16
  47              		.loc 1 47 5 is_stmt 1 view .LVU5
  48              		.loc 1 47 18 is_stmt 0 view .LVU6
  49 0016 1968     		ldr	r1, [r3]
  50 0018 8022     		movs	r2, #128
  51 001a 5202     		lsls	r2, r2, #9
  52 001c 0A43     		orrs	r2, r1
  53 001e 1A60     		str	r2, [r3]
  48:Src/main.c    **** 
  49:Src/main.c    ****     //PC9 GREEN
  50:Src/main.c    ****     GPIOC->MODER |= 1 << 18; //set bit 18
  54              		.loc 1 50 5 is_stmt 1 view .LVU7
  55              		.loc 1 50 18 is_stmt 0 view .LVU8
  56 0020 1968     		ldr	r1, [r3]
  57 0022 8022     		movs	r2, #128
  58 0024 D202     		lsls	r2, r2, #11
  59 0026 0A43     		orrs	r2, r1
  60 0028 1A60     		str	r2, [r3]
  51:Src/main.c    **** 
  52:Src/main.c    ****     //Push Button PA0
  53:Src/main.c    **** //    GPIOA->MODER &= ~(1 << 0); //clear bits 0 and 1
  54:Src/main.c    **** //    GPIOA->MODER &= ~(1 << 1);
  55:Src/main.c    **** //    GPIOA->OSPEEDR &= ~(1 << 0); //clear bit 0
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 3


  56:Src/main.c    **** //    GPIOA->PUPDR &= ~(1 << 0); //clear bit 0
  57:Src/main.c    **** //    GPIOA->PUPDR |= 1 << 1; //set bit 1
  58:Src/main.c    ****     return 0;
  61              		.loc 1 58 5 is_stmt 1 view .LVU9
  59:Src/main.c    **** }
  62              		.loc 1 59 1 is_stmt 0 view .LVU10
  63 002a 0020     		movs	r0, #0
  64              		@ sp needed
  65 002c 7047     		bx	lr
  66              	.L3:
  67 002e C046     		.align	2
  68              	.L2:
  69 0030 00080048 		.word	1207961600
  70              		.cfi_endproc
  71              	.LFE40:
  73              		.section	.text.setLED,"ax",%progbits
  74              		.align	1
  75              		.global	setLED
  76              		.syntax unified
  77              		.code	16
  78              		.thumb_func
  79              		.fpu softvfp
  81              	setLED:
  82              	.LVL0:
  83              	.LFB41:
  60:Src/main.c    **** 
  61:Src/main.c    **** 
  62:Src/main.c    **** void setLED(char led, int set){
  84              		.loc 1 62 31 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  63:Src/main.c    ****     int l = 6;
  89              		.loc 1 63 5 view .LVU12
  64:Src/main.c    ****     switch (led){
  90              		.loc 1 64 5 view .LVU13
  91 0000 6728     		cmp	r0, #103
  92 0002 0DD0     		beq	.L9
  93 0004 6F28     		cmp	r0, #111
  94 0006 0DD0     		beq	.L10
  95 0008 6228     		cmp	r0, #98
  96 000a 07D0     		beq	.L12
  97 000c 0623     		movs	r3, #6
  98              	.L5:
  99              	.LVL1:
  65:Src/main.c    ****         case 'r':
  66:Src/main.c    ****             l = 6;
  67:Src/main.c    ****             break;
  68:Src/main.c    ****         case 'b':
  69:Src/main.c    ****             l = 7;
  70:Src/main.c    ****             break;
  71:Src/main.c    ****         case 'o':
  72:Src/main.c    ****             l = 8;
  73:Src/main.c    ****             break;
  74:Src/main.c    ****         case 'g':
  75:Src/main.c    ****             l = 9;
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 4


  76:Src/main.c    ****             break;
  77:Src/main.c    ****         default:
  78:Src/main.c    ****             break;
  79:Src/main.c    ****     }
  80:Src/main.c    ****     
  81:Src/main.c    ****     switch (set){
 100              		.loc 1 81 5 view .LVU14
 101 000e 0129     		cmp	r1, #1
 102 0010 11D0     		beq	.L6
 103 0012 0229     		cmp	r1, #2
 104 0014 17D0     		beq	.L7
 105 0016 0029     		cmp	r1, #0
 106 0018 06D0     		beq	.L13
 107              	.LVL2:
 108              	.L4:
  82:Src/main.c    ****         case 0:
  83:Src/main.c    ****             GPIOC->ODR &= ~(1<<l);
  84:Src/main.c    ****             break;
  85:Src/main.c    ****         case 1:
  86:Src/main.c    ****             GPIOC->ODR |= 1<<l;
  87:Src/main.c    ****             break ;
  88:Src/main.c    ****         case 2:
  89:Src/main.c    ****             GPIOC->ODR ^= 1<<l;
  90:Src/main.c    ****             break;
  91:Src/main.c    ****         default:
  92:Src/main.c    ****             break;
  93:Src/main.c    ****     }
  94:Src/main.c    **** }
 109              		.loc 1 94 1 is_stmt 0 view .LVU15
 110              		@ sp needed
 111 001a 7047     		bx	lr
 112              	.LVL3:
 113              	.L12:
  69:Src/main.c    ****             break;
 114              		.loc 1 69 15 view .LVU16
 115 001c 0723     		movs	r3, #7
 116 001e F6E7     		b	.L5
 117              	.L9:
  75:Src/main.c    ****             break;
 118              		.loc 1 75 15 view .LVU17
 119 0020 0923     		movs	r3, #9
 120 0022 F4E7     		b	.L5
 121              	.L10:
  72:Src/main.c    ****             break;
 122              		.loc 1 72 15 view .LVU18
 123 0024 0823     		movs	r3, #8
 124 0026 F2E7     		b	.L5
 125              	.LVL4:
 126              	.L13:
  83:Src/main.c    ****             break;
 127              		.loc 1 83 13 is_stmt 1 view .LVU19
  83:Src/main.c    ****             break;
 128              		.loc 1 83 24 is_stmt 0 view .LVU20
 129 0028 0B48     		ldr	r0, .L14
 130              	.LVL5:
  83:Src/main.c    ****             break;
 131              		.loc 1 83 24 view .LVU21
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 5


 132 002a 4269     		ldr	r2, [r0, #20]
  83:Src/main.c    ****             break;
 133              		.loc 1 83 30 view .LVU22
 134 002c 0131     		adds	r1, r1, #1
 135              	.LVL6:
  83:Src/main.c    ****             break;
 136              		.loc 1 83 30 view .LVU23
 137 002e 9940     		lsls	r1, r1, r3
 138              	.LVL7:
  83:Src/main.c    ****             break;
 139              		.loc 1 83 24 view .LVU24
 140 0030 8A43     		bics	r2, r1
 141 0032 4261     		str	r2, [r0, #20]
  84:Src/main.c    ****         case 1:
 142              		.loc 1 84 13 is_stmt 1 view .LVU25
 143 0034 F1E7     		b	.L4
 144              	.LVL8:
 145              	.L6:
  86:Src/main.c    ****             break ;
 146              		.loc 1 86 13 view .LVU26
  86:Src/main.c    ****             break ;
 147              		.loc 1 86 24 is_stmt 0 view .LVU27
 148 0036 0848     		ldr	r0, .L14
 149              	.LVL9:
  86:Src/main.c    ****             break ;
 150              		.loc 1 86 24 view .LVU28
 151 0038 4269     		ldr	r2, [r0, #20]
  86:Src/main.c    ****             break ;
 152              		.loc 1 86 28 view .LVU29
 153 003a 0121     		movs	r1, #1
 154              	.LVL10:
  86:Src/main.c    ****             break ;
 155              		.loc 1 86 28 view .LVU30
 156 003c 9940     		lsls	r1, r1, r3
 157 003e 0B00     		movs	r3, r1
 158              	.LVL11:
  86:Src/main.c    ****             break ;
 159              		.loc 1 86 24 view .LVU31
 160 0040 1343     		orrs	r3, r2
 161 0042 4361     		str	r3, [r0, #20]
  87:Src/main.c    ****         case 2:
 162              		.loc 1 87 13 is_stmt 1 view .LVU32
 163 0044 E9E7     		b	.L4
 164              	.LVL12:
 165              	.L7:
  89:Src/main.c    ****             break;
 166              		.loc 1 89 13 view .LVU33
  89:Src/main.c    ****             break;
 167              		.loc 1 89 24 is_stmt 0 view .LVU34
 168 0046 0448     		ldr	r0, .L14
 169              	.LVL13:
  89:Src/main.c    ****             break;
 170              		.loc 1 89 24 view .LVU35
 171 0048 4269     		ldr	r2, [r0, #20]
  89:Src/main.c    ****             break;
 172              		.loc 1 89 28 view .LVU36
 173 004a 0121     		movs	r1, #1
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 6


 174              	.LVL14:
  89:Src/main.c    ****             break;
 175              		.loc 1 89 28 view .LVU37
 176 004c 9940     		lsls	r1, r1, r3
 177 004e 0B00     		movs	r3, r1
 178              	.LVL15:
  89:Src/main.c    ****             break;
 179              		.loc 1 89 24 view .LVU38
 180 0050 5340     		eors	r3, r2
 181 0052 4361     		str	r3, [r0, #20]
  90:Src/main.c    ****         default:
 182              		.loc 1 90 13 is_stmt 1 view .LVU39
 183              		.loc 1 94 1 is_stmt 0 view .LVU40
 184 0054 E1E7     		b	.L4
 185              	.L15:
 186 0056 C046     		.align	2
 187              	.L14:
 188 0058 00080048 		.word	1207961600
 189              		.cfi_endproc
 190              	.LFE41:
 192              		.section	.text._Error_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	_Error_Handler
 195              		.syntax unified
 196              		.code	16
 197              		.thumb_func
 198              		.fpu softvfp
 200              	_Error_Handler:
 201              	.LFB44:
  95:Src/main.c    **** 
  96:Src/main.c    **** 
  97:Src/main.c    **** 
  98:Src/main.c    **** /* USER CODE END 0 */
  99:Src/main.c    **** 
 100:Src/main.c    **** int main(void)
 101:Src/main.c    **** {
 102:Src/main.c    ****     HAL_Init();
 103:Src/main.c    ****     SystemClock_Config();
 104:Src/main.c    ****     RCC->APB2ENR    |= RCC_APB2ENR_SYSCFGCOMPEN;
 105:Src/main.c    **** 
 106:Src/main.c    ****     //Exercise 6.1
 107:Src/main.c    ****     RCC -> AHBENR |= RCC_AHBENR_GPIOAEN;
 108:Src/main.c    ****     RCC -> AHBENR |= RCC_AHBENR_GPIOCEN;
 109:Src/main.c    ****     RCC->APB1ENR |= RCC_APB1ENR_DACEN;
 110:Src/main.c    ****     RCC->APB2ENR |= RCC_APB2ENR_ADCEN;
 111:Src/main.c    **** 
 112:Src/main.c    ****     //1. Initialize the LED pins to output.
 113:Src/main.c    ****     initPins();
 114:Src/main.c    ****     //2. Select a GPIO pin to use as the ADC input.
 115:Src/main.c    ****     //ADC_IN0 PA0
 116:Src/main.c    ****     //LQFP64: 14
 117:Src/main.c    ****     GPIOA->MODER |= GPIO_MODER_MODER0_1 | GPIO_MODER_MODER0_0;
 118:Src/main.c    ****     //3. Enable the ADC1 in the RCC peripheral.
 119:Src/main.c    ****     //Above
 120:Src/main.c    ****     //4. Configure the ADC to 8-bit resolution, continuous conversion mode, hardware triggers disab
 121:Src/main.c    ****     ADC1->CFGR1 |= ADC_CFGR1_RES_1 | ADC_CFGR1_CONT;
 122:Src/main.c    ****     //5. Select/enable the input pin’s channel for ADC conversion.
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 7


 123:Src/main.c    ****     ADC1->CHSELR = ADC_CHSELR_CHSEL0;
 124:Src/main.c    ****     //6. Perform a self-calibration, enable, and start the ADC.
 125:Src/main.c    ****     ADC1->CR |= ADC_CR_ADCAL; //elf calihbration
 126:Src/main.c    ****     while(ADC1->CR & ADC_CR_ADCAL) {}
 127:Src/main.c    ****     ADC1->CR |= ADC_CR_ADEN; //enable
 128:Src/main.c    ****     while(ADC1->ISR & ADC_ISR_ADRDY) {}
 129:Src/main.c    ****     ADC1->CR |= ADC_CR_ADSTART; //start
 130:Src/main.c    ****     //7. In the main application loop, read the ADC data register and turn on/off LEDs depending on
 131:Src/main.c    ****     
 132:Src/main.c    ****     //Exercise 6.2:
 133:Src/main.c    ****     //1. Select a GPIO pin to use as the DAC output.
 134:Src/main.c    ****     //PA4
 135:Src/main.c    ****     //DAC_OUT1
 136:Src/main.c    ****     GPIOA->MODER |= GPIO_MODER_MODER4_0 | GPIO_MODER_MODER4_1;
 137:Src/main.c    ****     //2. Set the used DAC channel to software trigger mode.
 138:Src/main.c    ****     DAC1->CR |= DAC_CR_TSEL1;
 139:Src/main.c    ****     //3. Enable the used DAC channel.
 140:Src/main.c    ****     DAC1->CR |= DAC_CR_EN1;
 141:Src/main.c    ****     //4. Copy one of the wave-tables in figure 6.8 into your application.
 142:Src/main.c    **** //    uint8_t sine_table[32] = {127,151,175,197,216,232,244,251,254,251,244, 232,216,197,175,151,12
 143:Src/main.c    ****     const uint8_t triangle_table[32] = {0,15,31,47,63,79,95,111,127,142,158,174, 190,206,222,238,25
 144:Src/main.c    ****     //5. In the main application loop, use an index variable to write the next value in the wave-ta
 145:Src/main.c    ****     
 146:Src/main.c    ****     uint8_t index = 0;
 147:Src/main.c    ****     uint8_t input;
 148:Src/main.c    ****     while(1){
 149:Src/main.c    ****         input = ADC1->DR;
 150:Src/main.c    ****         
 151:Src/main.c    **** //        setLED('r', 0);
 152:Src/main.c    **** //        setLED('g', 0);
 153:Src/main.c    **** //        setLED('b', 0);
 154:Src/main.c    **** //        setLED('o', 0);
 155:Src/main.c    **** //
 156:Src/main.c    ****         if(input > 180){
 157:Src/main.c    ****             setLED('b', 1);
 158:Src/main.c    ****         }
 159:Src/main.c    ****         else if(input > 120){
 160:Src/main.c    ****             setLED('g', 1);
 161:Src/main.c    ****         }
 162:Src/main.c    ****         else if(input > 60){
 163:Src/main.c    ****             setLED('o', 1);
 164:Src/main.c    ****         }
 165:Src/main.c    ****         else if(input <= 60 && input > 40){
 166:Src/main.c    ****             setLED('r', 1);
 167:Src/main.c    ****         }
 168:Src/main.c    ****         
 169:Src/main.c    ****         DAC->DHR8R1 = triangle_table[index];
 170:Src/main.c    ****         index++;
 171:Src/main.c    ****         if(index > 31) {
 172:Src/main.c    ****             index = 0;
 173:Src/main.c    ****         }
 174:Src/main.c    ****         
 175:Src/main.c    ****         HAL_Delay(1);
 176:Src/main.c    ****     }
 177:Src/main.c    **** }
 178:Src/main.c    **** 
 179:Src/main.c    **** /** System Clock Configuration
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 8


 180:Src/main.c    **** */
 181:Src/main.c    **** void SystemClock_Config(void)
 182:Src/main.c    **** {
 183:Src/main.c    **** 
 184:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 185:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 186:Src/main.c    **** 
 187:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 188:Src/main.c    ****     */
 189:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 190:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 191:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 192:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 193:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 194:Src/main.c    ****   {
 195:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 196:Src/main.c    ****   }
 197:Src/main.c    **** 
 198:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 199:Src/main.c    ****     */
 200:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 201:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 202:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 203:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 204:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 205:Src/main.c    **** 
 206:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 207:Src/main.c    ****   {
 208:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 209:Src/main.c    ****   }
 210:Src/main.c    **** 
 211:Src/main.c    ****     /**Configure the Systick interrupt time
 212:Src/main.c    ****     */
 213:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 214:Src/main.c    **** 
 215:Src/main.c    ****     /**Configure the Systick
 216:Src/main.c    ****     */
 217:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 218:Src/main.c    **** 
 219:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 220:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 221:Src/main.c    **** }
 222:Src/main.c    **** 
 223:Src/main.c    **** /* USER CODE BEGIN 4 */
 224:Src/main.c    **** 
 225:Src/main.c    **** /* USER CODE END 4 */
 226:Src/main.c    **** 
 227:Src/main.c    **** /**
 228:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 229:Src/main.c    ****   * @param  None
 230:Src/main.c    ****   * @retval None
 231:Src/main.c    ****   */
 232:Src/main.c    **** void _Error_Handler(char * file, int line)
 233:Src/main.c    **** {
 202              		.loc 1 233 1 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ Volatile: function does not return.
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 9


 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 208              	.LVL16:
 209              	.L17:
 234:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 235:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 236:Src/main.c    ****   while(1)
 210              		.loc 1 236 3 discriminator 1 view .LVU42
 237:Src/main.c    ****   {
 238:Src/main.c    ****   }
 211              		.loc 1 238 3 discriminator 1 view .LVU43
 236:Src/main.c    ****   {
 212              		.loc 1 236 8 discriminator 1 view .LVU44
 213 0000 FEE7     		b	.L17
 214              		.cfi_endproc
 215              	.LFE44:
 217              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 218              		.align	2
 219              	.LC0:
 220 0000 5372632F 		.ascii	"Src/main.c\000"
 220      6D61696E 
 220      2E6300
 221              		.global	__aeabi_uidiv
 222              		.section	.text.SystemClock_Config,"ax",%progbits
 223              		.align	1
 224              		.global	SystemClock_Config
 225              		.syntax unified
 226              		.code	16
 227              		.thumb_func
 228              		.fpu softvfp
 230              	SystemClock_Config:
 231              	.LFB43:
 182:Src/main.c    **** 
 232              		.loc 1 182 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 72
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 00B5     		push	{lr}
 237              	.LCFI0:
 238              		.cfi_def_cfa_offset 4
 239              		.cfi_offset 14, -4
 240 0002 93B0     		sub	sp, sp, #76
 241              	.LCFI1:
 242              		.cfi_def_cfa_offset 80
 184:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 243              		.loc 1 184 3 view .LVU46
 185:Src/main.c    **** 
 244              		.loc 1 185 3 view .LVU47
 189:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 245              		.loc 1 189 3 view .LVU48
 189:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 246              		.loc 1 189 36 is_stmt 0 view .LVU49
 247 0004 0223     		movs	r3, #2
 248 0006 0593     		str	r3, [sp, #20]
 190:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 249              		.loc 1 190 3 is_stmt 1 view .LVU50
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 10


 190:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 250              		.loc 1 190 30 is_stmt 0 view .LVU51
 251 0008 013B     		subs	r3, r3, #1
 252 000a 0893     		str	r3, [sp, #32]
 191:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 253              		.loc 1 191 3 is_stmt 1 view .LVU52
 191:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 254              		.loc 1 191 41 is_stmt 0 view .LVU53
 255 000c 0F33     		adds	r3, r3, #15
 256 000e 0993     		str	r3, [sp, #36]
 192:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 257              		.loc 1 192 3 is_stmt 1 view .LVU54
 192:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 258              		.loc 1 192 34 is_stmt 0 view .LVU55
 259 0010 0023     		movs	r3, #0
 260 0012 0E93     		str	r3, [sp, #56]
 193:Src/main.c    ****   {
 261              		.loc 1 193 3 is_stmt 1 view .LVU56
 193:Src/main.c    ****   {
 262              		.loc 1 193 7 is_stmt 0 view .LVU57
 263 0014 05A8     		add	r0, sp, #20
 264 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 265              	.LVL17:
 193:Src/main.c    ****   {
 266              		.loc 1 193 6 view .LVU58
 267 001a 0028     		cmp	r0, #0
 268 001c 1ED1     		bne	.L21
 200:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 269              		.loc 1 200 3 is_stmt 1 view .LVU59
 200:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 270              		.loc 1 200 31 is_stmt 0 view .LVU60
 271 001e 0723     		movs	r3, #7
 272 0020 0193     		str	r3, [sp, #4]
 202:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 273              		.loc 1 202 3 is_stmt 1 view .LVU61
 202:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 274              		.loc 1 202 34 is_stmt 0 view .LVU62
 275 0022 0023     		movs	r3, #0
 276 0024 0293     		str	r3, [sp, #8]
 203:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 277              		.loc 1 203 3 is_stmt 1 view .LVU63
 203:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 278              		.loc 1 203 35 is_stmt 0 view .LVU64
 279 0026 0393     		str	r3, [sp, #12]
 204:Src/main.c    **** 
 280              		.loc 1 204 3 is_stmt 1 view .LVU65
 204:Src/main.c    **** 
 281              		.loc 1 204 36 is_stmt 0 view .LVU66
 282 0028 0493     		str	r3, [sp, #16]
 206:Src/main.c    ****   {
 283              		.loc 1 206 3 is_stmt 1 view .LVU67
 206:Src/main.c    ****   {
 284              		.loc 1 206 7 is_stmt 0 view .LVU68
 285 002a 0021     		movs	r1, #0
 286 002c 01A8     		add	r0, sp, #4
 287 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 288              	.LVL18:
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 11


 206:Src/main.c    ****   {
 289              		.loc 1 206 6 view .LVU69
 290 0032 0028     		cmp	r0, #0
 291 0034 16D1     		bne	.L22
 213:Src/main.c    **** 
 292              		.loc 1 213 3 is_stmt 1 view .LVU70
 213:Src/main.c    **** 
 293              		.loc 1 213 22 is_stmt 0 view .LVU71
 294 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 295              	.LVL19:
 213:Src/main.c    **** 
 296              		.loc 1 213 3 view .LVU72
 297 003a FA21     		movs	r1, #250
 298 003c 8900     		lsls	r1, r1, #2
 299 003e FFF7FEFF 		bl	__aeabi_uidiv
 300              	.LVL20:
 301 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 302              	.LVL21:
 217:Src/main.c    **** 
 303              		.loc 1 217 3 is_stmt 1 view .LVU73
 304 0046 0420     		movs	r0, #4
 305 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 306              	.LVL22:
 220:Src/main.c    **** }
 307              		.loc 1 220 3 view .LVU74
 308 004c 0120     		movs	r0, #1
 309 004e 0022     		movs	r2, #0
 310 0050 0021     		movs	r1, #0
 311 0052 4042     		rsbs	r0, r0, #0
 312 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 313              	.LVL23:
 221:Src/main.c    **** 
 314              		.loc 1 221 1 is_stmt 0 view .LVU75
 315 0058 13B0     		add	sp, sp, #76
 316              		@ sp needed
 317 005a 00BD     		pop	{pc}
 318              	.L21:
 195:Src/main.c    ****   }
 319              		.loc 1 195 5 is_stmt 1 view .LVU76
 320 005c C321     		movs	r1, #195
 321 005e 0348     		ldr	r0, .L23
 322 0060 FFF7FEFF 		bl	_Error_Handler
 323              	.LVL24:
 324              	.L22:
 208:Src/main.c    ****   }
 325              		.loc 1 208 5 view .LVU77
 326 0064 D021     		movs	r1, #208
 327 0066 0148     		ldr	r0, .L23
 328 0068 FFF7FEFF 		bl	_Error_Handler
 329              	.LVL25:
 330              	.L24:
 331              		.align	2
 332              	.L23:
 333 006c 00000000 		.word	.LC0
 334              		.cfi_endproc
 335              	.LFE43:
 337              		.section	.text.main,"ax",%progbits
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 12


 338              		.align	1
 339              		.global	main
 340              		.syntax unified
 341              		.code	16
 342              		.thumb_func
 343              		.fpu softvfp
 345              	main:
 346              	.LFB42:
 101:Src/main.c    ****     HAL_Init();
 347              		.loc 1 101 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 32
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351 0000 10B5     		push	{r4, lr}
 352              	.LCFI2:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 4, -8
 355              		.cfi_offset 14, -4
 356 0002 88B0     		sub	sp, sp, #32
 357              	.LCFI3:
 358              		.cfi_def_cfa_offset 40
 102:Src/main.c    ****     SystemClock_Config();
 359              		.loc 1 102 5 view .LVU79
 360 0004 FFF7FEFF 		bl	HAL_Init
 361              	.LVL26:
 103:Src/main.c    ****     RCC->APB2ENR    |= RCC_APB2ENR_SYSCFGCOMPEN;
 362              		.loc 1 103 5 view .LVU80
 363 0008 FFF7FEFF 		bl	SystemClock_Config
 364              	.LVL27:
 104:Src/main.c    **** 
 365              		.loc 1 104 5 view .LVU81
 104:Src/main.c    **** 
 366              		.loc 1 104 21 is_stmt 0 view .LVU82
 367 000c 424B     		ldr	r3, .L38
 368 000e 9A69     		ldr	r2, [r3, #24]
 369 0010 0124     		movs	r4, #1
 370 0012 2243     		orrs	r2, r4
 371 0014 9A61     		str	r2, [r3, #24]
 107:Src/main.c    ****     RCC -> AHBENR |= RCC_AHBENR_GPIOCEN;
 372              		.loc 1 107 5 is_stmt 1 view .LVU83
 107:Src/main.c    ****     RCC -> AHBENR |= RCC_AHBENR_GPIOCEN;
 373              		.loc 1 107 19 is_stmt 0 view .LVU84
 374 0016 5969     		ldr	r1, [r3, #20]
 375 0018 8022     		movs	r2, #128
 376 001a 9202     		lsls	r2, r2, #10
 377 001c 0A43     		orrs	r2, r1
 378 001e 5A61     		str	r2, [r3, #20]
 108:Src/main.c    ****     RCC->APB1ENR |= RCC_APB1ENR_DACEN;
 379              		.loc 1 108 5 is_stmt 1 view .LVU85
 108:Src/main.c    ****     RCC->APB1ENR |= RCC_APB1ENR_DACEN;
 380              		.loc 1 108 19 is_stmt 0 view .LVU86
 381 0020 5969     		ldr	r1, [r3, #20]
 382 0022 8022     		movs	r2, #128
 383 0024 1203     		lsls	r2, r2, #12
 384 0026 0A43     		orrs	r2, r1
 385 0028 5A61     		str	r2, [r3, #20]
 109:Src/main.c    ****     RCC->APB2ENR |= RCC_APB2ENR_ADCEN;
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 13


 386              		.loc 1 109 5 is_stmt 1 view .LVU87
 109:Src/main.c    ****     RCC->APB2ENR |= RCC_APB2ENR_ADCEN;
 387              		.loc 1 109 18 is_stmt 0 view .LVU88
 388 002a D969     		ldr	r1, [r3, #28]
 389 002c 8022     		movs	r2, #128
 390 002e 9205     		lsls	r2, r2, #22
 391 0030 0A43     		orrs	r2, r1
 392 0032 DA61     		str	r2, [r3, #28]
 110:Src/main.c    **** 
 393              		.loc 1 110 5 is_stmt 1 view .LVU89
 110:Src/main.c    **** 
 394              		.loc 1 110 18 is_stmt 0 view .LVU90
 395 0034 9969     		ldr	r1, [r3, #24]
 396 0036 8022     		movs	r2, #128
 397 0038 9200     		lsls	r2, r2, #2
 398 003a 0A43     		orrs	r2, r1
 399 003c 9A61     		str	r2, [r3, #24]
 113:Src/main.c    ****     //2. Select a GPIO pin to use as the ADC input.
 400              		.loc 1 113 5 is_stmt 1 view .LVU91
 401 003e FFF7FEFF 		bl	initPins
 402              	.LVL28:
 117:Src/main.c    ****     //3. Enable the ADC1 in the RCC peripheral.
 403              		.loc 1 117 5 view .LVU92
 117:Src/main.c    ****     //3. Enable the ADC1 in the RCC peripheral.
 404              		.loc 1 117 18 is_stmt 0 view .LVU93
 405 0042 9022     		movs	r2, #144
 406 0044 D205     		lsls	r2, r2, #23
 407 0046 1368     		ldr	r3, [r2]
 408 0048 0321     		movs	r1, #3
 409 004a 0B43     		orrs	r3, r1
 410 004c 1360     		str	r3, [r2]
 121:Src/main.c    ****     //5. Select/enable the input pin’s channel for ADC conversion.
 411              		.loc 1 121 5 is_stmt 1 view .LVU94
 121:Src/main.c    ****     //5. Select/enable the input pin’s channel for ADC conversion.
 412              		.loc 1 121 17 is_stmt 0 view .LVU95
 413 004e 334B     		ldr	r3, .L38+4
 414 0050 D968     		ldr	r1, [r3, #12]
 415 0052 334A     		ldr	r2, .L38+8
 416 0054 0A43     		orrs	r2, r1
 417 0056 DA60     		str	r2, [r3, #12]
 123:Src/main.c    ****     //6. Perform a self-calibration, enable, and start the ADC.
 418              		.loc 1 123 5 is_stmt 1 view .LVU96
 123:Src/main.c    ****     //6. Perform a self-calibration, enable, and start the ADC.
 419              		.loc 1 123 18 is_stmt 0 view .LVU97
 420 0058 9C62     		str	r4, [r3, #40]
 125:Src/main.c    ****     while(ADC1->CR & ADC_CR_ADCAL) {}
 421              		.loc 1 125 5 is_stmt 1 view .LVU98
 125:Src/main.c    ****     while(ADC1->CR & ADC_CR_ADCAL) {}
 422              		.loc 1 125 14 is_stmt 0 view .LVU99
 423 005a 9968     		ldr	r1, [r3, #8]
 424 005c 8022     		movs	r2, #128
 425 005e 1206     		lsls	r2, r2, #24
 426 0060 0A43     		orrs	r2, r1
 427 0062 9A60     		str	r2, [r3, #8]
 126:Src/main.c    ****     ADC1->CR |= ADC_CR_ADEN; //enable
 428              		.loc 1 126 5 is_stmt 1 view .LVU100
 429              	.L26:
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 14


 126:Src/main.c    ****     ADC1->CR |= ADC_CR_ADEN; //enable
 430              		.loc 1 126 37 discriminator 1 view .LVU101
 126:Src/main.c    ****     ADC1->CR |= ADC_CR_ADEN; //enable
 431              		.loc 1 126 10 discriminator 1 view .LVU102
 126:Src/main.c    ****     ADC1->CR |= ADC_CR_ADEN; //enable
 432              		.loc 1 126 15 is_stmt 0 discriminator 1 view .LVU103
 433 0064 2D4B     		ldr	r3, .L38+4
 434 0066 9B68     		ldr	r3, [r3, #8]
 126:Src/main.c    ****     ADC1->CR |= ADC_CR_ADEN; //enable
 435              		.loc 1 126 10 discriminator 1 view .LVU104
 436 0068 002B     		cmp	r3, #0
 437 006a FBDB     		blt	.L26
 127:Src/main.c    ****     while(ADC1->ISR & ADC_ISR_ADRDY) {}
 438              		.loc 1 127 5 is_stmt 1 view .LVU105
 127:Src/main.c    ****     while(ADC1->ISR & ADC_ISR_ADRDY) {}
 439              		.loc 1 127 14 is_stmt 0 view .LVU106
 440 006c 2B4A     		ldr	r2, .L38+4
 441 006e 9368     		ldr	r3, [r2, #8]
 442 0070 0121     		movs	r1, #1
 443 0072 0B43     		orrs	r3, r1
 444 0074 9360     		str	r3, [r2, #8]
 128:Src/main.c    ****     ADC1->CR |= ADC_CR_ADSTART; //start
 445              		.loc 1 128 5 is_stmt 1 view .LVU107
 446              	.L27:
 128:Src/main.c    ****     ADC1->CR |= ADC_CR_ADSTART; //start
 447              		.loc 1 128 39 discriminator 1 view .LVU108
 128:Src/main.c    ****     ADC1->CR |= ADC_CR_ADSTART; //start
 448              		.loc 1 128 10 discriminator 1 view .LVU109
 128:Src/main.c    ****     ADC1->CR |= ADC_CR_ADSTART; //start
 449              		.loc 1 128 15 is_stmt 0 discriminator 1 view .LVU110
 450 0076 294B     		ldr	r3, .L38+4
 451 0078 1B68     		ldr	r3, [r3]
 128:Src/main.c    ****     ADC1->CR |= ADC_CR_ADSTART; //start
 452              		.loc 1 128 10 discriminator 1 view .LVU111
 453 007a DB07     		lsls	r3, r3, #31
 454 007c FBD4     		bmi	.L27
 129:Src/main.c    ****     //7. In the main application loop, read the ADC data register and turn on/off LEDs depending on
 455              		.loc 1 129 5 is_stmt 1 view .LVU112
 129:Src/main.c    ****     //7. In the main application loop, read the ADC data register and turn on/off LEDs depending on
 456              		.loc 1 129 14 is_stmt 0 view .LVU113
 457 007e 274A     		ldr	r2, .L38+4
 458 0080 9368     		ldr	r3, [r2, #8]
 459 0082 0421     		movs	r1, #4
 460 0084 0B43     		orrs	r3, r1
 461 0086 9360     		str	r3, [r2, #8]
 136:Src/main.c    ****     //2. Set the used DAC channel to software trigger mode.
 462              		.loc 1 136 5 is_stmt 1 view .LVU114
 136:Src/main.c    ****     //2. Set the used DAC channel to software trigger mode.
 463              		.loc 1 136 18 is_stmt 0 view .LVU115
 464 0088 9022     		movs	r2, #144
 465 008a D205     		lsls	r2, r2, #23
 466 008c 1168     		ldr	r1, [r2]
 467 008e C023     		movs	r3, #192
 468 0090 9B00     		lsls	r3, r3, #2
 469 0092 0B43     		orrs	r3, r1
 470 0094 1360     		str	r3, [r2]
 138:Src/main.c    ****     //3. Enable the used DAC channel.
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 15


 471              		.loc 1 138 5 is_stmt 1 view .LVU116
 138:Src/main.c    ****     //3. Enable the used DAC channel.
 472              		.loc 1 138 14 is_stmt 0 view .LVU117
 473 0096 234B     		ldr	r3, .L38+12
 474 0098 1A68     		ldr	r2, [r3]
 475 009a 3821     		movs	r1, #56
 476 009c 0A43     		orrs	r2, r1
 477 009e 1A60     		str	r2, [r3]
 140:Src/main.c    ****     //4. Copy one of the wave-tables in figure 6.8 into your application.
 478              		.loc 1 140 5 is_stmt 1 view .LVU118
 140:Src/main.c    ****     //4. Copy one of the wave-tables in figure 6.8 into your application.
 479              		.loc 1 140 14 is_stmt 0 view .LVU119
 480 00a0 1A68     		ldr	r2, [r3]
 481 00a2 3739     		subs	r1, r1, #55
 482 00a4 0A43     		orrs	r2, r1
 483 00a6 1A60     		str	r2, [r3]
 143:Src/main.c    ****     //5. In the main application loop, use an index variable to write the next value in the wave-ta
 484              		.loc 1 143 5 is_stmt 1 view .LVU120
 143:Src/main.c    ****     //5. In the main application loop, use an index variable to write the next value in the wave-ta
 485              		.loc 1 143 19 is_stmt 0 view .LVU121
 486 00a8 6946     		mov	r1, sp
 487 00aa 1F48     		ldr	r0, .L38+16
 488 00ac 0B00     		movs	r3, r1
 489 00ae 0200     		movs	r2, r0
 490 00b0 13CA     		ldmia	r2!, {r0, r1, r4}
 491 00b2 13C3     		stmia	r3!, {r0, r1, r4}
 492 00b4 13CA     		ldmia	r2!, {r0, r1, r4}
 493 00b6 13C3     		stmia	r3!, {r0, r1, r4}
 494 00b8 03CA     		ldmia	r2!, {r0, r1}
 495 00ba 03C3     		stmia	r3!, {r0, r1}
 146:Src/main.c    ****     uint8_t input;
 496              		.loc 1 146 5 is_stmt 1 view .LVU122
 497              	.LVL29:
 146:Src/main.c    ****     uint8_t input;
 498              		.loc 1 146 13 is_stmt 0 view .LVU123
 499 00bc 0024     		movs	r4, #0
 500 00be 0FE0     		b	.L33
 501              	.LVL30:
 502              	.L35:
 157:Src/main.c    ****         }
 503              		.loc 1 157 13 is_stmt 1 view .LVU124
 504 00c0 0121     		movs	r1, #1
 505 00c2 6220     		movs	r0, #98
 506 00c4 FFF7FEFF 		bl	setLED
 507              	.LVL31:
 508              	.L29:
 169:Src/main.c    ****         index++;
 509              		.loc 1 169 9 view .LVU125
 169:Src/main.c    ****         index++;
 510              		.loc 1 169 37 is_stmt 0 view .LVU126
 511 00c8 6B46     		mov	r3, sp
 512 00ca 1A5D     		ldrb	r2, [r3, r4]
 169:Src/main.c    ****         index++;
 513              		.loc 1 169 21 view .LVU127
 514 00cc 154B     		ldr	r3, .L38+12
 515 00ce 1A61     		str	r2, [r3, #16]
 170:Src/main.c    ****         if(index > 31) {
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 16


 516              		.loc 1 170 9 is_stmt 1 view .LVU128
 170:Src/main.c    ****         if(index > 31) {
 517              		.loc 1 170 14 is_stmt 0 view .LVU129
 518 00d0 0134     		adds	r4, r4, #1
 519              	.LVL32:
 170:Src/main.c    ****         if(index > 31) {
 520              		.loc 1 170 14 view .LVU130
 521 00d2 E4B2     		uxtb	r4, r4
 522              	.LVL33:
 171:Src/main.c    ****             index = 0;
 523              		.loc 1 171 9 is_stmt 1 view .LVU131
 171:Src/main.c    ****             index = 0;
 524              		.loc 1 171 11 is_stmt 0 view .LVU132
 525 00d4 1F2C     		cmp	r4, #31
 526 00d6 00D9     		bls	.L32
 172:Src/main.c    ****         }
 527              		.loc 1 172 19 view .LVU133
 528 00d8 0024     		movs	r4, #0
 529              	.LVL34:
 530              	.L32:
 175:Src/main.c    ****     }
 531              		.loc 1 175 9 is_stmt 1 view .LVU134
 532 00da 0120     		movs	r0, #1
 533 00dc FFF7FEFF 		bl	HAL_Delay
 534              	.LVL35:
 148:Src/main.c    ****         input = ADC1->DR;
 535              		.loc 1 148 10 view .LVU135
 536              	.L33:
 147:Src/main.c    ****     while(1){
 537              		.loc 1 147 5 view .LVU136
 148:Src/main.c    ****         input = ADC1->DR;
 538              		.loc 1 148 5 view .LVU137
 149:Src/main.c    ****         
 539              		.loc 1 149 9 view .LVU138
 149:Src/main.c    ****         
 540              		.loc 1 149 21 is_stmt 0 view .LVU139
 541 00e0 0E4B     		ldr	r3, .L38+4
 542 00e2 1B6C     		ldr	r3, [r3, #64]
 149:Src/main.c    ****         
 543              		.loc 1 149 15 view .LVU140
 544 00e4 DBB2     		uxtb	r3, r3
 545              	.LVL36:
 156:Src/main.c    ****             setLED('b', 1);
 546              		.loc 1 156 9 is_stmt 1 view .LVU141
 156:Src/main.c    ****             setLED('b', 1);
 547              		.loc 1 156 11 is_stmt 0 view .LVU142
 548 00e6 B42B     		cmp	r3, #180
 549 00e8 EAD8     		bhi	.L35
 159:Src/main.c    ****             setLED('g', 1);
 550              		.loc 1 159 14 is_stmt 1 view .LVU143
 159:Src/main.c    ****             setLED('g', 1);
 551              		.loc 1 159 16 is_stmt 0 view .LVU144
 552 00ea 782B     		cmp	r3, #120
 553 00ec 0AD8     		bhi	.L36
 162:Src/main.c    ****             setLED('o', 1);
 554              		.loc 1 162 14 is_stmt 1 view .LVU145
 162:Src/main.c    ****             setLED('o', 1);
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 17


 555              		.loc 1 162 16 is_stmt 0 view .LVU146
 556 00ee 3C2B     		cmp	r3, #60
 557 00f0 0DD8     		bhi	.L37
 165:Src/main.c    ****             setLED('r', 1);
 558              		.loc 1 165 14 is_stmt 1 view .LVU147
 165:Src/main.c    ****             setLED('r', 1);
 559              		.loc 1 165 29 is_stmt 0 view .LVU148
 560 00f2 293B     		subs	r3, r3, #41
 561              	.LVL37:
 165:Src/main.c    ****             setLED('r', 1);
 562              		.loc 1 165 29 view .LVU149
 563 00f4 DBB2     		uxtb	r3, r3
 564              	.LVL38:
 165:Src/main.c    ****             setLED('r', 1);
 565              		.loc 1 165 16 view .LVU150
 566 00f6 132B     		cmp	r3, #19
 567 00f8 E6D8     		bhi	.L29
 166:Src/main.c    ****         }
 568              		.loc 1 166 13 is_stmt 1 view .LVU151
 569 00fa 0121     		movs	r1, #1
 570 00fc 7220     		movs	r0, #114
 571 00fe FFF7FEFF 		bl	setLED
 572              	.LVL39:
 573 0102 E1E7     		b	.L29
 574              	.LVL40:
 575              	.L36:
 160:Src/main.c    ****         }
 576              		.loc 1 160 13 view .LVU152
 577 0104 0121     		movs	r1, #1
 578 0106 6720     		movs	r0, #103
 579 0108 FFF7FEFF 		bl	setLED
 580              	.LVL41:
 160:Src/main.c    ****         }
 581              		.loc 1 160 13 is_stmt 0 view .LVU153
 582 010c DCE7     		b	.L29
 583              	.LVL42:
 584              	.L37:
 163:Src/main.c    ****         }
 585              		.loc 1 163 13 is_stmt 1 view .LVU154
 586 010e 0121     		movs	r1, #1
 587 0110 6F20     		movs	r0, #111
 588 0112 FFF7FEFF 		bl	setLED
 589              	.LVL43:
 163:Src/main.c    ****         }
 590              		.loc 1 163 13 is_stmt 0 view .LVU155
 591 0116 D7E7     		b	.L29
 592              	.L39:
 593              		.align	2
 594              	.L38:
 595 0118 00100240 		.word	1073876992
 596 011c 00240140 		.word	1073816576
 597 0120 10200000 		.word	8208
 598 0124 00740040 		.word	1073771520
 599 0128 00000000 		.word	.LANCHOR0
 600              		.cfi_endproc
 601              	.LFE42:
 603              		.section	.rodata
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 18


 604              		.align	2
 605              		.set	.LANCHOR0,. + 0
 606              	.LC2:
 607 0000 000F1F2F 		.ascii	"\000\017\037/?O_o\177\216\236\256\276\316\336\356\376"
 607      3F4F5F6F 
 607      7F8E9EAE 
 607      BECEDEEE 
 607      FE
 608 0011 EEDECEBE 		.ascii	"\356\336\316\276\256\236\216\177o_O?/\037\017"
 608      AE9E8E7F 
 608      6F5F4F3F 
 608      2F1F0F
 609              		.text
 610              	.Letext0:
 611              		.file 2 "/usr/local/Caskroom/gcc-arm-embedded/10-2020-q4-major/gcc-arm-none-eabi-10-2020-q4-major/
 612              		.file 3 "/usr/local/Caskroom/gcc-arm-embedded/10-2020-q4-major/gcc-arm-none-eabi-10-2020-q4-major/
 613              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 614              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 615              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 616              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 617              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:16     .text.initPins:0000000000000000 $t
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:24     .text.initPins:0000000000000000 initPins
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:69     .text.initPins:0000000000000030 $d
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:74     .text.setLED:0000000000000000 $t
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:81     .text.setLED:0000000000000000 setLED
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:188    .text.setLED:0000000000000058 $d
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:193    .text._Error_Handler:0000000000000000 $t
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:200    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:218    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:223    .text.SystemClock_Config:0000000000000000 $t
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:230    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:333    .text.SystemClock_Config:000000000000006c $d
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:338    .text.main:0000000000000000 $t
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:345    .text.main:0000000000000000 main
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:595    .text.main:0000000000000118 $d
/var/folders/z1/9pc01z197v90cg4866q5qgbh0000gn/T//ccQyPkto.s:604    .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_Delay
